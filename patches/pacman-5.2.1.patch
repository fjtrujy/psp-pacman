diff --color -Naur pacman-5.2.1.orig/lib/libalpm/diskspace.c pacman-5.2.1/lib/libalpm/diskspace.c
--- pacman-5.2.1.orig/lib/libalpm/diskspace.c	2019-10-24 15:29:08.000000000 +0200
+++ pacman-5.2.1/lib/libalpm/diskspace.c	2020-05-27 00:18:52.653963571 +0200
@@ -71,7 +71,7 @@
 
 static int mount_point_load_fsinfo(alpm_handle_t *handle, alpm_mountpoint_t *mountpoint)
 {
-#if defined(HAVE_GETMNTENT)
+#if defined(HAVE_GETMNTENT) && !defined(HAVE_GETMNTINFO)
 	/* grab the filesystem usage */
 	if(statvfs(mountpoint->mount_dir, &(mountpoint->fsp)) != 0) {
 		_alpm_log(handle, ALPM_LOG_WARNING,
diff --color -Naur pacman-5.2.1.orig/lib/libalpm/signing.c pacman-5.2.1/lib/libalpm/signing.c
--- pacman-5.2.1.orig/lib/libalpm/signing.c	2019-10-24 15:29:08.000000000 +0200
+++ pacman-5.2.1/lib/libalpm/signing.c	2020-05-25 22:42:30.516063383 +0200
@@ -277,7 +277,8 @@
 	CHECK_ERR();
 
 	mode = gpgme_get_keylist_mode(ctx);
-	mode |= GPGME_KEYLIST_MODE_LOCATE;
+	/* pspdev: LOCATE alias is only available in 1.11.0 or newer */
+	mode |= (GPGME_KEYLIST_MODE_LOCAL|GPGME_KEYLIST_MODE_EXTERN);
 	gpg_err = gpgme_set_keylist_mode(ctx, mode);
 	CHECK_ERR();
 
diff --color -Naur pacman-5.2.1.orig/lib/libalpm/util.c pacman-5.2.1/lib/libalpm/util.c
--- pacman-5.2.1.orig/lib/libalpm/util.c	2019-10-24 15:29:08.000000000 +0200
+++ pacman-5.2.1/lib/libalpm/util.c	2020-05-27 00:45:56.233934782 +0200
@@ -34,6 +34,14 @@
 #include <fnmatch.h>
 #include <poll.h>
 
+#ifdef __APPLE__
+	#include <signal.h>
+	/* deprecated */
+	#define SIGPOLL 7
+	/* not available */
+	#define MSG_NOSIGNAL 0
+#endif
+
 /* libarchive */
 #include <archive.h>
 #include <archive_entry.h>
diff --color -Naur pacman-5.2.1.orig/meson.build pacman-5.2.1/meson.build
--- pacman-5.2.1.orig/meson.build	2019-11-01 01:56:41.000000000 +0100
+++ pacman-5.2.1/meson.build	2020-05-27 02:18:17.086699579 +0200
@@ -45,12 +45,7 @@
   error('bash >= 4.4.0 is required for pacman scripts.')
 endif
 
-bashcompletion = dependency('bash-completion', required : false)
-if bashcompletion.found()
-  BASHCOMPDIR = bashcompletion.get_pkgconfig_variable('completionsdir')
-else
-  BASHCOMPDIR = join_paths(DATAROOTDIR, 'bash-completion/completions')
-endif
+BASHCOMPDIR = join_paths(DATAROOTDIR, 'bash-completion/completions')
 
 if get_option('use-git-version')
   PACKAGE_VERSION = run_command(
@@ -79,9 +74,14 @@
 conf.set_quoted('HOOKDIR', join_paths(SYSCONFDIR, 'pacman.d/hooks/'))
 conf.set_quoted('ROOTDIR', ROOTDIR)
 
+libintl = []
 if get_option('i18n')
+  # pspdev: first check in libc, fallback to libintl
   if not cc.has_function('ngettext')
-    error('ngettext not found but NLS support requested')
+    libintl = cc.find_library('intl', required : false)
+    if not libintl.found()
+      error('ngettext not found but NLS support requested')
+    endif
   endif
   conf.set('ENABLE_NLS', 1)
 endif
@@ -154,8 +154,9 @@
     ['struct statfs', 'f_flags', '''#include <sys/param.h>
                                     #include <sys/mount.h>'''],
   ]
-  have = cc.has_member(member[0], member[1], prefix : member[2])
-  conf.set('HAVE_' + '_'.join([member[0], member[1]]).underscorify().to_upper(), have)
+  if cc.has_member(member[0], member[1], prefix : member[2])
+    conf.set('HAVE_' + '_'.join([member[0], member[1]]).underscorify().to_upper(), 1)
+  endif
 endforeach
 
 foreach type : [
@@ -173,10 +174,10 @@
   endif
 endforeach
 
-if conf.has('HAVE_STRUCT_STATVFS_F_FLAG')
-  conf.set('FSSTATSTYPE', 'struct statvfs')
-elif conf.has('HAVE_STRUCT_STATFS_F_FLAGS')
+if conf.has('HAVE_STRUCT_STATFS_F_FLAGS')
   conf.set('FSSTATSTYPE', 'struct statfs')
+elif conf.has('HAVE_STRUCT_STATVFS_F_FLAG')
+  conf.set('FSSTATSTYPE', 'struct statvfs')
 endif
 
 if get_option('buildtype').startswith('debug')
@@ -314,7 +315,7 @@
   include_directories : includes,
   install : false)
 
-alpm_deps = [crypto_provider, libarchive, libcurl, gpgme]
+alpm_deps = [libintl, crypto_provider, libarchive, libcurl, gpgme]
 
 libalpm_a = static_library(
   'alpm_objlib',
@@ -322,26 +323,15 @@
   # https://github.com/mesonbuild/meson/issues/3937
   objects : libcommon.extract_all_objects(),
   include_directories : includes,
-  dependencies : alpm_deps)
+  dependencies : alpm_deps,
+  install : false)
 
 libalpm = library(
   'alpm',
   version : libalpm_version,
   objects: libalpm_a.extract_all_objects(recursive: true),
   dependencies : alpm_deps,
-  install : true)
-
-install_headers(
-  'lib/libalpm/alpm.h',
-  'lib/libalpm/alpm_list.h')
-
-pkgconfig = import('pkgconfig')
-pkgconfig.generate(
-  libalpm,
-  name : 'libalpm',
-  description : 'Arch Linux package management library',
-  version : libalpm_version,
-  url : 'http://www.archlinux.org/pacman/')
+  install : false)
 
 pacman_bin = executable(
   'pacman',
diff --color -Naur pacman-5.2.1.orig/scripts/makepkg.sh.in pacman-5.2.1/scripts/makepkg.sh.in
--- pacman-5.2.1.orig/scripts/makepkg.sh.in	2019-10-30 01:05:28.000000000 +0100
+++ pacman-5.2.1/scripts/makepkg.sh.in	2020-05-25 22:08:25.260680805 +0200
@@ -229,11 +229,6 @@
 		cmd=("$PACMAN_PATH" "$@")
 	else
 		cmd=("$PACMAN_PATH" "${PACMAN_OPTS[@]}" "$@")
-		if type -p sudo >/dev/null; then
-			cmd=(sudo "${cmd[@]}")
-		else
-			cmd=(su root -c "$(printf '%q ' "${cmd[@]}")")
-		fi
 		local lockfile="$(pacman-conf DBPath)/db.lck"
 		while [[ -f $lockfile ]]; do
 			local timer=0
diff --color -Naur pacman-5.2.1.orig/scripts/meson.build pacman-5.2.1/scripts/meson.build
--- pacman-5.2.1.orig/scripts/meson.build	2019-08-12 03:26:42.000000000 +0200
+++ pacman-5.2.1/scripts/meson.build	2020-05-25 20:54:39.214269161 +0200
@@ -78,12 +78,6 @@
 
 subdir('libmakepkg')
 
-configure_file(
-	configuration : { 'libmakepkgdir': LIBMAKEPKGDIR, 'PACKAGE_VERSION': PACKAGE_VERSION },
-	input : 'libmakepkg.pc.in',
-	output : '@BASENAME@',
-	install_dir : join_paths(DATAROOTDIR, 'pkgconfig'))
-
 custom_target(
   'bash_completion',
   command : [ SCRIPT_EDITOR, '@INPUT@', '@OUTPUT@' ],
diff --color -Naur pacman-5.2.1.orig/src/pacman/conf.c pacman-5.2.1/src/pacman/conf.c
--- pacman-5.2.1.orig/src/pacman/conf.c	2019-10-24 15:29:08.000000000 +0200
+++ pacman-5.2.1/src/pacman/conf.c	2020-05-27 00:45:25.164446267 +0200
@@ -32,6 +32,10 @@
 #include <sys/wait.h>
 #include <unistd.h>
 
+#ifdef __APPLE__
+	#include <signal.h>
+#endif
+
 /* pacman */
 #include "conf.h"
 #include "ini.h"
diff --color -Naur pacman-5.2.1.orig/src/pacman/pacman.c pacman-5.2.1/src/pacman/pacman.c
--- pacman-5.2.1.orig/src/pacman/pacman.c	2019-10-24 15:29:08.000000000 +0200
+++ pacman-5.2.1/src/pacman/pacman.c	2020-05-25 20:56:17.072331665 +0200
@@ -1126,7 +1126,8 @@
 	}
 
 	/* check if we have sufficient permission for the requested operation */
-	if(myuid > 0 && needs_root()) {
+	/* pspdev: since we always force a root dir, check write access */
+	if(myuid > 0 && needs_root() && (access(config->rootdir, W_OK) != 0)) {
 		pm_printf(ALPM_LOG_ERROR, _("you cannot perform this operation unless you are root.\n"));
 		cleanup(EXIT_FAILURE);
 	}
